# Similar to etc/evergreen.yml, but for release builds.

include:
- filename: etc/evergreen_yml_components/definitions.yml
- filename: etc/evergreen_yml_components/variants/task_generation.yml
- filename: etc/evergreen_yml_components/variants/atlas.yml
- filename: etc/evergreen_yml_components/variants/misc_release.yml
### Comment out when using this file for a Rapid release branch. ###
# - filename: etc/evergreen_yml_components/variants/ibm.yml
### Uncomment when using this file for a LTS release branch. ###
# - filename: etc/evergreen_yml_components/variants/in_memory.yml
### Uncomment when using this file for a LTS or Rapid release branch. ###
- filename: etc/evergreen_yml_components/variants/sanitizer.yml
### Uncomment when using this file for a LTS or Rapid release branch. ###
- filename: etc/evergreen_yml_components/variants/ninja.yml
### Uncomment when using this file for a LTS or Rapid release branch. ###
- filename: etc/evergreen_yml_components/variants/classic_engine.yml
### Uncomment when using this file for a LTS or Rapid release branch. ###
- filename: etc/evergreen_yml_components/variants/config_shard.yml
- filename: etc/evergreen_yml_components/variants/compile_static_analysis.yml


parameters:
- key: evergreen_config_file_path
  value: "etc/evergreen_nightly.yml"
  description: "path to this file"


variables:
- &linux_x86_dynamic_debug_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_x86_dynamic_debug_compile_variant_name linux-x86-dynamic-debug-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: linux-x86-dynamic-debug-compile-required

- &windows_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &windows_compile_variant_name windows-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: windows-compile-required

- &amazon_linux2_arm64_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &amazon_linux2_arm64_compile_variant_name amazon-linux2-arm64-compile
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: amazon-linux2-arm64-compile

# THIS WAS COPIED TO config_shard.yml - ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THAT FILE.
- &linux_x86_dynamic_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_x86_dynamic_compile_variant_name linux-x86-dynamic-compile
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: linux-x86-dynamic-compile

# THIS WAS COPIED TO config_shard.yml - ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THAT FILE.
- &linux_x86_generic_expansions
  multiversion_platform: rhel80
  multiversion_edition: enterprise
  repo_edition: enterprise
  large_distro_name: rhel80-medium
  num_scons_link_jobs_available: 0.99
  compile_variant: *linux_x86_dynamic_compile_variant_name

- &linux_debug_aubsan_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_debug_aubsan_compile_variant_name linux-debug-aubsan-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: linux-debug-aubsan-compile-required

# If you add anything to san_options, make sure the appropriate changes are
# also made to SConstruct.
# and also to the san_options in compile_static_analysis.yml and sanitizer.yml
- aubsan_options: &aubsan_options
  >-
    UBSAN_OPTIONS="print_stacktrace=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"
    LSAN_OPTIONS="suppressions=etc/lsan.suppressions:report_objects=1"
    ASAN_OPTIONS="detect_leaks=1:check_initialization_order=true:strict_init_order=true:abort_on_error=1:disable_coredump=0:handle_abort=1:strict_string_checks=true:detect_invalid_pointer_pairs=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"

- &linux_arm64_generic_expansions
  multiversion_platform: amazon2
  multiversion_edition: enterprise
  multiversion_architecture: aarch64
  packager_arch: aarch64
  packager_distro: amazon2
  repo_edition: enterprise
  large_distro_name: amazon2-arm64-large
  num_scons_link_jobs_available: 0.99
  compile_variant: *amazon_linux2_arm64_compile_variant_name

- &enterprise-amazon-linux2-arm64-all-feature-flags-template
  <<: *amazon_linux2_arm64_compile_variant_dependency
  name: &enterprise-amazon-linux2-arm64-all-feature-flags enterprise-amazon-linux2-arm64-all-feature-flags
  display_name: "! Amazon Linux 2 arm64 (all feature flags)"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  modules:
    - enterprise
  run_on:
    - amazon2-arm64-small
  stepback: true
  expansions: &enterprise-amazon-linux2-arm64-all-feature-flags-expansions
    <<: *linux_arm64_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    has_packages: false
    jstestfuzz_num_generated_files: 40
    jstestfuzz_concurrent_num_files: 10
    target_resmoke_time: 10
    max_sub_suites: 5
    idle_timeout_factor: 1.5
    exec_timeout_factor: 1.5
    test_flags: >-
      --runAllFeatureFlagTests
      --excludeWithAnyTags=incompatible_with_amazon_linux,incompatible_with_shard_merge,requires_external_data_source
  tasks:
  - name: analyze_shard_key_jscore_passthrough_gen
  - name: query_golden_classic
  - name: lint_fuzzer_sanity_patch
  - name: test_api_version_compatibility
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: .aggfuzzer !.cqf_only
  - name: .aggregation
  - name: aggregation_repeat_queries
  - name: audit
  - name: .auth
  - name: buildscripts_test
  - name: .bulk_write
  - name: resmoke_end2end_tests
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .change_stream_fuzzer
  # TODO SERVER-57866: Remove the explicit mentions of change stream multitenant suites.
  - name: change_streams_multitenant_passthrough
  - name: change_streams_multitenant_sharded_collections_passthrough
  - name: .cqf
  - name: .misc_js
  - name: .clustered_collections
  - name: .concurrency !.large !.ubsan !.no_txns
  - name: .concurrency .large !.ubsan !.no_txns
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - amazon2-arm64-large
  - name: .config_fuzzer_stress
    distros:
    - amazon2-arm64-large
  - name: disk_wiredtiger
  - name: .encrypt
  - name: feature_flag_multiversion_gen
  - name: idl_tests
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common
  - name: jsCore_column_store_indexes
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: jsCore_wildcard_indexes
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: .multiversion_sanity_check
  - name: mqlrun
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: powercycle_smoke
  - name: .query_fuzzer
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth !.ignore_non_generated_replica_sets_jscore_passthrough
  - name: replica_sets_jscore_passthrough_gen
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: secondary_reads_passthrough_gen
  - name: .serverless
    distros:
    - amazon2-arm64-large
  - name: session_jscore_passthrough
  - name: .shard_split
  - name: .shard_merge
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: sharding_api_strict_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  - name: sharded_multi_stmt_txn_jscore_passthrough
  - name: streams
  - name: streams_auth
  - name: .updatefuzzer
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: query_stats_passthrough
  - name: query_stats_passthrough_writeonly
  - name: query_stats_mongos_passthrough


buildvariants:
- &linux-64-debug-required-template
  <<: *linux_x86_dynamic_debug_compile_variant_dependency
  name: &linux-64-debug-required linux-64-debug-required
  display_name: "! Linux x86 Shared Library DEBUG"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  run_on:
  - rhel80-medium
  expansions:
    resmoke_jobs_factor: 0.5  # Avoid starting too many mongod's
    test_flags: --excludeWithAnyTags=requires_http_client
    target_resmoke_time: 15
    max_sub_suites: 5
    large_distro_name: rhel80-medium
    compile_variant: *linux_x86_dynamic_debug_compile_variant_name
  tasks:
  - name: .aggregation !.encrypt !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: .causally_consistent !.wo_snapshot
  - name: .change_streams
  - name: .clustered_collections
  - name: .misc_js
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: query_golden_classic
  - name: libunwind_tests
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: .ocsp
  - name: .read_write_concern
  - name: .replica_sets !.encrypt !.ignore_non_generated_replica_sets_jscore_passthrough !.fcbis
  - name: replica_sets_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
  - name: replica_sets_max_mirroring_large_txns_format_gen
  - name: .retry
  - name: .read_only
  - name: session_jscore_passthrough
  - name: sharded_multi_stmt_txn_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot
  - name: sharding_gen
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen

- &enterprise-windows-template
  <<: *windows_compile_variant_dependency
  name: &enterprise-windows-required enterprise-windows-required
  display_name: "! Enterprise Windows"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  modules:
  - enterprise
  run_on:
  - windows-vsCurrent-small
  expansions: &windows_required_expansions
    compile_variant: *windows_compile_variant_name
    burn_in_tests_build_variant: enterprise-windows-required
    exe: ".exe"
    content_type: application/zip
    python: '/cygdrive/c/python/python39/python.exe'
    ext: zip
    multiversion_platform: windows
    multiversion_edition: enterprise
    jstestfuzz_num_generated_files: 35
    target_resmoke_time: 20
    max_sub_suites: 5
    large_distro_name: windows-vsCurrent-large
    push_path: windows
    push_bucket: downloads.10gen.com
    push_name: windows
    push_arch: x86_64-enterprise
    test_flags: --excludeWithAnyTags=incompatible_with_windows_tls
    external_auth_jobs_max: 1
  tasks:
  - name: audit
  - name: auth_audit_gen
  - name: causally_consistent_jscore_txns_passthrough
    distros:
    - windows-vsCurrent-large
  - name: .encrypt !.aggregation !.replica_sets !.sharding !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_windows
    distros:
    - windows-2016-dc
  - name: .jscore .common !.sharding
  - name: jsCore_auth
  - name: jsCore_ese
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: mqlrun
  - name: noPassthrough_gen
  - name: noPassthroughWithMongod_gen
  - name: .replica_sets .common !.ignore_non_generated_replica_sets_jscore_passthrough
  - name: .replica_sets .multi_oplog !.ignore_non_generated_replica_sets_jscore_passthrough !.gcm
  - name: replica_sets_jscore_passthrough_gen
    distros:
    - windows-vsCurrent-large
  - name: sasl
  - name: .sharding .txns
  - name: sharding_auth_audit_gen
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gen

- name: run-all-affected-jstests
  display_name: "! Run All Affected JStests"
  patch_only: true
  run_on:
  - rhel80-medium
  expansions:
    large_distro_name: rhel80-large
    burn_in_tag_include_all_required_and_suggested: true
    burn_in_tag_exclude_build_variants: >-
      macos-debug-suggested
    burn_in_tag_include_build_variants: >-
      enterprise-rhel-80-64-bit-inmem
      enterprise-rhel-80-64-bit-multiversion
    burn_in_tag_compile_task_dependency: archive_dist_test_debug
    compile_variant: *amazon_linux2_arm64_compile_variant_name
  depends_on:
  - name: archive_dist_test_debug
    variant: *amazon_linux2_arm64_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: version_burn_in_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: burn_in_tags_gen

- &enterprise-rhel-80-64-bit-dynamic-template
  <<: *linux_x86_dynamic_compile_variant_dependency
  name: &enterprise-rhel-80-64-bit-dynamic enterprise-rhel-80-64-bit-dynamic
  display_name: "! Shared Library Enterprise RHEL 8.0"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  modules:
  - enterprise
  run_on:
  - rhel80-small
  # THIS WAS COPIED TO config_shard.yml - ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THAT FILE.
  expansions: &enterprise-rhel-80-64-bit-dynamic-expansions
    <<: *linux_x86_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    has_packages: false
    jstestfuzz_num_generated_files: 40
    jstestfuzz_concurrent_num_files: 10
    target_resmoke_time: 10
    max_sub_suites: 5
    idle_timeout_factor: 1.5
    exec_timeout_factor: 1.5
    large_distro_name: rhel80-medium
  depends_on:
  - name: archive_dist_test_debug
    variant: *linux_x86_dynamic_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: .aggfuzzer !.feature_flag_guarded
  - name: .aggregation !.feature_flag_guarded
  - name: aggregation_repeat_queries
  - name: analyze_shard_key_jscore_passthrough_gen
  - name: audit
  - name: .auth
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .change_stream_fuzzer
  - name: .misc_js
  - name: .concurrency !.large !.ubsan !.no_txns
  - name: .concurrency .large !.ubsan !.no_txns
    distros:
    - rhel80-medium
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - rhel80-medium
  - name: disk_wiredtiger
  - name: .encrypt
  - name: idl_tests
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: jsCore
    distros:
    - rhel80-xlarge
  - name: .jscore .common !jsCore
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: mqlrun
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: .query_fuzzer
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-xlarge
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: sharding_api_strict_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: .updatefuzzer
  - name: secondary_reads_passthrough_gen
  - name: .serverless
    distros:
    - rhel80-xlarge
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl

- &rhel80-debug-aubsan-lite-template
  <<: *linux_debug_aubsan_compile_variant_dependency
  name: &rhel80-debug-aubsan-lite rhel80-debug-aubsan-lite
  display_name: "! Shared Library {A,UB}SAN Enterprise RHEL 8.0 DEBUG"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  modules:
  - enterprise
  run_on:
  - rhel80-build
  expansions: &aubsan-lite-required-expansions
    compile_variant: *linux_debug_aubsan_compile_variant_name
    lang_environment: LANG=C
    san_options: *aubsan_options
    test_flags: --excludeWithAnyTags=requires_ocsp_stapling,requires_increased_memlock_limits
    resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under {A,UB}SAN build.
    hang_analyzer_dump_core: false
    max_sub_suites: 3
    num_scons_link_jobs_available: 0.99
    large_distro_name: rhel80-build
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    gcov_tool: /opt/mongodbtoolchain/v4/bin/gcov
  tasks:
  - name: jsCore
  - name: jsCore_txns

- <<: *enterprise-amazon-linux2-arm64-all-feature-flags-template
  name: &commit-queue commit-queue
  display_name: "~ Commit Queue"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
  stepback: false
  expansions:
    <<: *linux_arm64_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    commit_queue_alternate_cache: amazon-linux2-arm64-compile
    has_packages: false
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=amazon2
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic
      -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    clang_tidy_toolchain: v4
    num_scons_unit_cc_jobs_available: 0.75
    compile_variant: *commit-queue
  depends_on: []
  tasks:
  - name: compile_ninja_quick_TG
  - name: compile_test_parallel_core_stream_TG
    distros:
    - amazon2-arm64-xlarge-commitqueue
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - amazon2-arm64-xlarge-commitqueue
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - amazon2-arm64-xlarge-commitqueue
  - name: jsCore
    distros:
    - amazon2-arm64-large
  - name: .lint
  - name: test_api_version_compatibility
  - name: validate_commit_message
  - name: lint_large_files_check
  - name: check_feature_flag_tags
  - name: compile_venv_deps_check
  - name: resmoke_validation_tests
  - name: version_gen_validation
    distros:
    - ubuntu2004-small
